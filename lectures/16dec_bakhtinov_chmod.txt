# Linux / Dec 16, 2022

**Что такое сервер?**

В общем - программа или устройство, которые предоставляют “услуги”.

**Сервер** - высокопроизводительный компьютер (напр., по сравнению с моб/телефоном). Имеет больше выч/ресурсов:

- Оперативно-запом. уст-во (энерго-завис. память)
    - Типовой объем для сервера - до 1000 Гб (1 Тб)
- Постоянно-запом. уст-во (энерго-независ. память)
- Процессорное время (процессор)
- Сетевая подсистема (напр., скорость сет/адапторов до 10 Гбит/с)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d9a152cd-fbef-469d-9d57-d71cd8ea66e4/Untitled.png)

**Варианты подключения к серверу?**

- удаленно (преимущественно)
    - SSH (сетевой протокол, Secure Shell)
- локально

**Как выгрузить файл (проект, архив) на сервер?**

Для развертывания Backend-части приложения

`wget опции ссылка_на_файл`

`git clone ссылка_на_репо`

`scp` (вып. через SSH)

**Что такое CRON?**

Программа (сервис) для запуска задач (программ) по расписанию

`crontab -e` (открыть расписание тек/пользователя на редактирование)

описать  CRON-строку для запуска задачи каждый день в 4 часа утра
`0 4 * * * /some/command`

описать CRON-строку для запуска задачи по будням каждые 2 часа
`0 */2 * * 1-5 /some/command`

**Как вручную добавить публичный SSH/RSA-ключ на сервер, имея доступ к нему?**

Добавить (записать) ключ новой строкой в текстовый файл `~/.ssh/authorized_keys` 

**Что такое пара RSA/SSH-ключей и зачем она нужна?**

Необх. для обеспечения беспарольного доступа

Ключи - ключевые файлы (текстовые)

Хранятся в каталоге `~/.ssh/`

**Приватный ключ** хранится в тайне

**Публичный ключ** размещается на серверах или в аккаунте на GitHub

**Показать только файлы с расширением `.txt`**

`ls -lah *.txt`

Сценарий 1. Отправить файл с раб/компьютера на сервер

`scp что куда`

`scp filepath target_server_path`

Пример:

`scp **~/downloads/andrei.txt** ec2-user@linux.telran-edu.de:~/basic_51-52e/`

### Задача

- необх. скачать по ссылке файл из интернета на сервер:
    - ссылка [`https://gist.githubusercontent.com/khaykov/a6105154becce4c0530da38e723c2330/raw/41ab415ac41c93a198f7da5b47d604956157c5c3/gistfile1.txt`](https://gist.githubusercontent.com/khaykov/a6105154becce4c0530da38e723c2330/raw/41ab415ac41c93a198f7da5b47d604956157c5c3/gistfile1.txt)
    - скачать в каталог ~/basic_51-52e/
        - `cd ~/basic_51-52e/`
    - скачать под названием andrei_1mb.txt
        - `wget -O andrei_1mb.txt ссылка_выше`
    
    ### Управление правами доступа к файлам/каталогом в Linux
    
    `ls -lah` (просмотр прав доступа)
    
    `chmod` (change mode) устанавливает права доступа
    
    **Типы (категории) пользователей**
    
    - владелец (`u`)
    - группа пользователей владельца (`g`)
    - остальные (`o`)
    
    **Типы полномочий**
    
    чтение (read) `r`
    
    запись (write) `w`
    
    исполнение (eXecution) `x`
    
    Примеры сжатого отображения прав доступа:
    
    `rwx rwx rwx` (777)
    
    `rwx r-x r-x` (755)
    
    `rwx --- ---` (700)
    
    `r-- --- ---` (400)
    
    **Примеры `chmod`:**
    
    `chmod 700 filename`
    

### vim - продвинутый текстовый редактор

`vim название_файла` (открыть файл на редактирование)

`i` перейти в режим ввода текста

`ESCAPE` выйти из режима ввода текста

`:wq!` (сохранить и выйти):

**Что такое GIT и GitHub?**

`git` - программа (система контроля версий)

`GitHub` - веб-сайт (хостинг, место хранения кода) - технически применение необяз.

### Базовый порядок работы с GIT

`git init` (создать репо)

`git add .` (сделать все файлы проекта отслеж.)

`git commit -m ‘описание изменений’` (сохранить изменения)
